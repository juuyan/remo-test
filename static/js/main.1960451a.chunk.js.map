{"version":3,"sources":["assets/screenshort.png","components/Button.jsx","components/StateStore.js","components/ChatBox.jsx","components/History.jsx","components/UserAvatar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","icon","children","disable","highlight","style","className","type","Buttons","btns","gap","buttons","map","btn","i","key","appContext","createContext","reducer","state","action","newState","activeUsers","push","userKey","users","opening","filter","ele","connecting","meetingApproved","Error","initialState","john","name","position","sharedConnections","sharedOrganizations","sharedEdu","color","connected","proposeReceived","coord","x","y","luna","user","useContext","dispatch","scroller","useRef","toggleBox","useEffect","current","scrollTop","scrollHeight","onClick","backgroundColor","faUserFriends","href","target","faLinkedin","length","title","content","e","stopPropagation","faTimes","ref","w","handleApprove","Button","faCalendar","placeholder","autoFocus","Info","Balloon","MeetingRequest","faCheck","logsData","offline","useState","setOpening","logs","log","faHistory","Log","enable","setEnable","opacity","visiblity","sharedConnectionAmount","sharedExpAmount","handleClick","includes","top","left","onMouseEnter","onMouseLeave","value","faComment","App","userAvatars","Object","keys","UserAvatar","chatBoxes","activeUser","ChatBox","src","bg","minWidth","flexDirection","History","Boolean","window","location","hostname","match","ReactDOM","render","props","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1960451a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screenshort.0bffa0bc.png\";","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default ({ icon, children, disable, highlight }) => {\n  const style = disable\n    ? 'bg-lighter cursor-default'\n    : `${highlight ? 'shadow-base' : ''} bg-white hover:bg-lighter hover:text-black`\n  return (\n    <button\n      className={`#btn px-1 h-2.5 border text-xs text-dark font-semibold leading-none border-light flex items-center trans ${style}`}\n      type=\"button\"\n    >\n      {icon && (\n        <div className=\"mr-0.5\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      )}\n      <div>{children}</div>\n    </button>\n  )\n}\n\nexport const Buttons = ({ btns, gap }) => {\n  const buttons = btns.map((btn, i) => (\n    <div className={`mx-${gap}`} key={i}>\n      {btn}\n    </div>\n  ))\n  return <div className={`flex-none -mx-${gap} flex`}>{buttons}</div>\n}\n","import React, { useReducer, createContext } from 'react'\n\nexport const appContext = createContext(null)\n\nexport default props => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return <appContext.Provider value={{ state: state, dispatch: dispatch }}>{props.children}</appContext.Provider>\n}\n\nfunction reducer(state, action) {\n  let newState = { ...state }\n  switch (action.type) {\n    case 'invoke':\n      newState.activeUsers.push(action.userKey)\n      return newState\n    case 'setChatBoxState':\n      newState.users[action.userKey].opening = action.opening\n      return newState\n    case 'close':\n      newState.users[action.userKey].opening = true\n      newState.activeUsers = newState.activeUsers.filter(ele => ele != action.userKey)\n      return newState\n    case 'invite':\n      newState.users[action.userKey].connecting = true\n      return newState\n    case 'approveMeeting':\n      newState.users[action.userKey].meetingApproved = true\n      return newState\n    default:\n      throw new Error()\n  }\n}\n\nconst initialState = {\n  activeUsers: [],\n  users: {\n    john: {\n      userKey: 'john',\n      name: 'John Starbucks',\n      position: 'Full-stack Developer at Segment',\n      sharedConnections: ['Julia Ace', 'Ana Z', 'Diana Wu'],\n      sharedOrganizations: ['Microsoft'],\n      sharedEdu: ['University X'],\n      color: '#6807f9',\n      connected: false,\n      connecting: false,\n      meetingApproved: false,\n      proposeReceived: false,\n      coord: {\n        x: 650,\n        y: 263,\n      },\n      opening: true,\n    },\n    luna: {\n      userKey: 'luna',\n      name: 'Luna Christin',\n      position: 'Senior Designer at Muji',\n      sharedConnections: ['Chris Max'],\n      sharedOrganizations: ['Saleforce', 'Microsoft'],\n      sharedEdu: [],\n      color: '#01d28e',\n      connected: true,\n      connecting: false,\n      meetingApproved: false,\n      proposeReceived: true,\n      coord: {\n        x: 650,\n        y: 352,\n      },\n      opening: true,\n    },\n  },\n}\n","import React, { useContext, useRef, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faCalendar, faUserFriends, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport Button, { Buttons } from './Button'\nimport { appContext } from './StateStore'\n\nexport default ({ user }) => {\n  const { state, dispatch } = useContext(appContext)\n  const scroller = useRef(null)\n  const {\n    userKey,\n    name,\n    position,\n    sharedConnections,\n    sharedOrganizations,\n    sharedEdu,\n    color,\n    connected,\n    connecting,\n    meetingApproved,\n    proposeReceived,\n    opening,\n  } = state.users[user]\n\n  const toggleBox = opening => {\n    dispatch({ type: 'setChatBoxState', opening: opening, userKey: userKey })\n  }\n\n  useEffect(() => {\n    if (scroller && opening) scroller.current.scrollTop = scroller.current.scrollHeight\n  })\n\n  return opening ? (\n    <div className=\"relative w-40 text-sm rounded-t-lg bg-white border border-light shadow-float overflow-hidden\">\n      <div className=\"relative p-1.5 cursor-pointer hover:bg-lighter flex\" onClick={() => toggleBox(false)}>\n        <div className=\"#avatar h-4 w-4 mr-1 rounded-full flex-none\" style={{ backgroundColor: color }} />\n        <div className=\"text-sm\">\n          <div className=\"flex items-center\">\n            <div className=\"font-bold\">{name}</div>\n            {connected && (\n              <div className=\"ml-0.5 text-xs text-dark\">\n                <FontAwesomeIcon icon={faUserFriends} />\n              </div>\n            )}\n            <div className=\"ml-0.5 text-sm text-google hover:text-facebook\">\n              <a href=\"https://linkedin.com\" target=\"_blank\">\n                <FontAwesomeIcon icon={faLinkedin} />\n              </a>\n            </div>\n          </div>\n          <div className=\"mb-0.5 text-dark leading-tight\">{position}</div>\n          <div className=\"mb-0.5 text-xs text-dark\">\n            {sharedConnections.length > 0 && (\n              <Info title={`${sharedConnections.length} shared connections:`} content=\" Mike J, Paul T, Julia Somebody\" />\n            )}\n            {sharedEdu.length > 0 && <Info title=\"Both have studied in:\" content=\" University Name\" />}\n            {sharedOrganizations.length > 0 && <Info title=\"Both have worked in:\" content=\" Microsoft, Segment\" />}\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute right-0 top-0 m-1.5 text-dark text-sm\">\n        <div\n          className=\"cursor-pointer hover:text-black\"\n          onClick={e => {\n            e.stopPropagation()\n            dispatch({ type: 'close', userKey: userKey })\n          }}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n      </div>\n      <div className=\"#message-section relative h-30 border-b border-t border-light bg-light\">\n        <div className=\"#scroller relative h-full w-full overflow-scroll\" ref={scroller}>\n          <div className=\"p-1.5 pb-3\">\n            <Balloon w={22} />\n            <Balloon w={16} color={color} />\n            {!proposeReceived && meetingApproved && (\n              <>\n                <Balloon>What about scheduling a meeting?</Balloon>\n                <Balloon color={color}>\n                  {`Sure. Please check my `}\n                  <a\n                    className=\"underline font-semibold text-dark hover:text-primary\"\n                    href=\"https://calendly.com/juuyan/60min\"\n                    target=\"_blank\"\n                  >\n                    Calendly\n                  </a>\n                </Balloon>\n              </>\n            )}\n            {proposeReceived && (\n              <>\n                <Balloon color={color}>What about scheduling a meeting?</Balloon>\n                <MeetingRequest\n                  meetingApproved={meetingApproved}\n                  handleApprove={() => {\n                    dispatch({ type: 'approveMeeting', userKey: userKey })\n                  }}\n                />\n                {meetingApproved && (\n                  <>\n                    <Balloon>\n                      {`Sure. Please check my `}\n                      <a\n                        className=\"underline font-semibold text-dark hover:text-primary\"\n                        href=\"https://calendly.com/juuyan/60min\"\n                        target=\"_blank\"\n                      >\n                        Calendly\n                      </a>\n                    </Balloon>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n        {(meetingApproved || !proposeReceived) && (\n          <div className=\"absolute bottom-0 left-0 ml-1.5 mb-1\">\n            <Buttons\n              gap={0.5}\n              btns={[\n                meetingApproved ? (\n                  <a href=\"https://calendly.com/juuyan/60min\" target=\"_blank\">\n                    <Button highlight icon={faCalendar}>\n                      Schedule meeting\n                    </Button>\n                  </a>\n                ) : (\n                  <div onClick={() => dispatch({ type: 'approveMeeting', userKey: userKey })}>\n                    <Button highlight icon={faCalendar}>\n                      Propose meeting\n                    </Button>\n                  </div>\n                ),\n                !connected && (\n                  <div\n                    onClick={() => {\n                      if (!connecting) dispatch({ type: 'invite', userKey: userKey })\n                    }}\n                  >\n                    <Button highlight disable={connecting} icon={faLinkedin}>\n                      {connecting ? 'Pending' : 'Connect'}\n                    </Button>\n                  </div>\n                ),\n              ]}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"p-1.5 flex items-center\">\n        <input className=\"flex-1 outline-none\" placeholder=\"Type a message...\" autoFocus={true} />\n      </div>\n    </div>\n  ) : (\n    <div\n      className=\"relative p-1 w-22 text-sm rounded-t-lg bg-white shadow-float overflow-hidden flex items-center cursor-pointer hover:bg-lighter\"\n      onClick={() => toggleBox(true)}\n    >\n      <div className=\"#avatar h-2.5 w-2.5 mr-1 rounded-full flex-none\" style={{ backgroundColor: color }} />\n      <div className=\"font-semibold leading-none\">{name}</div>\n      <div\n        className=\"absolute right-0 top-0 m-1 mr-1.5 text-dark cursor-pointer hover:text-black\"\n        onClick={e => {\n          e.stopPropagation()\n          dispatch({ type: 'close', userKey: userKey })\n        }}\n      >\n        <FontAwesomeIcon icon={faTimes} />\n      </div>\n    </div>\n  )\n}\n\nconst Info = ({ title, content }) => (\n  <div className=\"mb-0.5 leading-tight text-xs text-dark flex items-start\">\n    <div className=\"\">\n      <span className=\"font-bold\">{title}</span> {content}\n    </div>\n  </div>\n)\n\nconst Balloon = ({ color, w, children }) => (\n  <div className={`w-full mb-2 flex justify-${!color ? 'end' : 'start'}`}>\n    {color && <div className=\"#avatar flex-none h-4 w-4 mr-1 rounded-full \" style={{ backgroundColor: color }} />}\n    <div className={`flex-none px-1 h-4 w-${w ? w : 'auto'} whitespace-pre text-xs bg-white rounded-lg flex items-center`}>\n      {children}\n    </div>\n  </div>\n)\n\nconst MeetingRequest = ({ meetingApproved, handleApprove }) => (\n  <div className=\"w-full mb-1 flex-col items-center\">\n    <div className=\"text-gray text-center text-xs font-semibold mb-1\">{`Luna has proposed you a meeting. Let her know what you think.`}</div>\n    <div className=\"flex justify-center\">\n      <Buttons\n        gap={0.5}\n        btns={[\n          <div onClick={handleApprove}>\n            <Button highlight disable={meetingApproved} icon={faCheck}>\n              Accept\n            </Button>\n          </div>,\n          <Button highlight disable={meetingApproved} icon={faTimes}>\n            Refuse\n          </Button>,\n        ]}\n      />\n    </div>\n  </div>\n)\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHistory, faTimes, faUserFriends } from '@fortawesome/free-solid-svg-icons'\n\nconst logsData = [\n  { name: 'John Starbucks', color: '#6807f9', position: 'Full-stack Developer at Segment' },\n  { name: 'Macheal K.', color: '#fcd307', position: 'Tech Lead at TechTalent', offline: true, connected: true },\n  { name: 'Luna Christin', color: '#01d28e', position: 'Senior Designer at Muji', connected: true },\n  { name: 'Julia Alex', color: '#c886e5', position: 'Recruiter at TechTalent' },\n  { name: 'Max Lin', color: '#ff935c', position: 'Marketing Designer at Saleforce' },\n]\n\nexport default () => {\n  const [opening, setOpening] = useState(false)\n  const logs = logsData.map((log, i) => (\n    <Log\n      name={log.name}\n      color={log.color}\n      position={log.position}\n      offline={log.offline ? true : false}\n      connected={log.connected ? true : false}\n    />\n  ))\n  return (\n    <div className=\"mx-1\">\n      {!opening ? (\n        <div onClick={() => setOpening(true)}>\n          <button className=\"w-6 h-6 mb-1.5 bg-secondary rounded-full text-white text-lg shadow-float flex items-center justify-center outline-none hover:bg-black\">\n            <FontAwesomeIcon icon={faHistory} />\n          </button>\n        </div>\n      ) : (\n        <div className=\"relative w-35 text-sm rounded-t-lg bg-white border border-light shadow-float overflow-hidden\">\n          <div className=\"w-full p-1.5 pb-1 bg-secondary text-white flex items-center\">\n            <FontAwesomeIcon icon={faHistory} />\n            <div className=\"ml-0.5 flex-1 font-semibold text-xs font-medium\">Networking history</div>\n            <div className=\"cursor-pointer text-white hover:text-light\" onClick={() => setOpening(false)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n          <div className=\"py-0.5\">{logs}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst Log = ({ name, color, position, offline, connected }) => (\n  <div className=\"relative px-1.5 pt-1 text-sm bg-white flex cursor-pointer hover:bg-lighter\">\n    <div className=\"#avatar h-2.5 w-2.5 mr-1 rounded-full flex-none\" style={{ backgroundColor: color }} />\n    <div className=\"flex-1 pb-1 border-b border-light\">\n      <div className=\"flex items-center\">\n        <div className={`${offline ? 'text-dark' : ''} font-semibold leading-tight`}>{name}</div>\n        {connected && (\n          <div className={`${offline ? 'text-gray' : 'text-dark'} ml-0.5 leading-none`}>\n            <FontAwesomeIcon icon={faUserFriends} />\n          </div>\n        )}\n      </div>\n      <div className={`${offline ? 'text-gray' : 'text-dark'} leading-tight`}>{position}</div>\n    </div>\n  </div>\n)\n","import React, { useState, useContext } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { faComment, faUserFriends, faCalendar } from '@fortawesome/free-solid-svg-icons'\nimport { appContext } from './StateStore'\nimport Button, { Buttons } from './Button'\n\nexport default ({ user }) => {\n  const [enable, setEnable] = useState(false)\n  const { state, dispatch } = useContext(appContext)\n  const opacity = enable ? 'opacity-100' : 'opacity-0'\n  const visiblity = enable ? 'visible' : 'invisible'\n\n  const {\n    userKey,\n    name,\n    position,\n    sharedConnections,\n    sharedOrganizations,\n    sharedEdu,\n    color,\n    connected,\n    connecting,\n    meetingApproved,\n    coord,\n  } = user\n  const { x, y } = coord\n\n  const sharedConnectionAmount = sharedConnections ? sharedConnections.length : 0\n  const sharedExpAmount = (sharedOrganizations ? sharedOrganizations.length : 0) + (sharedEdu ? sharedEdu.length : 0)\n\n  const handleClick = () => {\n    setEnable(false)\n    if (!state.activeUsers.includes(userKey)) dispatch({ type: 'invoke', userKey: userKey })\n    else dispatch({ type: 'setChatBoxState', userKey: userKey, opening: true })\n  }\n\n  return (\n    <div\n      className=\"absolute w-5 h-5 rounded-full cursor-pointer\"\n      style={{ top: y, left: x }}\n      onMouseEnter={() => setEnable(true)}\n      onMouseLeave={() => setEnable(false)}\n    >\n      <div className={'absolute inset-0'} onClick={handleClick} />\n      <div className={`absolute z-50 w-40 ${opacity} ${visiblity} trans-flash`} style={{ left: '100%' }}>\n        <div\n          className=\"p-1.5 pb-4 bg-white rounded-lg border border-light shadow-float trans hover:bg-lighter flex\"\n          onClick={handleClick}\n        >\n          <div className=\"#avatar h-5 w-5 mr-1 bg-google rounded-full flex-none\" style={{ backgroundColor: color }} />\n          <div className=\"text-sm\">\n            <div className=\"flex items-center\">\n              <div className=\"font-bold leading-tight\">{name}</div>\n              {connected && (\n                <div className=\"ml-0.5 text-xs text-dark leading-tight\">\n                  <FontAwesomeIcon icon={faUserFriends} />\n                </div>\n              )}\n            </div>\n            <div className=\"mb-0.5 text-dark leading-tight\">{position}</div>\n            <div className=\"mb-0.5 text-xs text-dark\">\n              {sharedConnectionAmount > 0 && (\n                <>\n                  <Info value={sharedConnectionAmount} content=\"shared connections\" />\n                  <span>・</span>\n                </>\n              )}\n              {sharedExpAmount > 0 && <Info value={sharedExpAmount} content=\"shared experiences\" />}\n            </div>\n            {/* <div>PositionPositionPositionPosition</div> */}\n          </div>\n        </div>\n        <div className=\"absolute bottom-0 right-0 mb-1.5 mr-1.5\">\n          <Buttons\n            gap={0.5}\n            btns={[\n              <div onClick={handleClick}>\n                <Button icon={faComment}>Chat</Button>\n              </div>,\n              !connected && (\n                <div\n                  onClick={() => {\n                    if (!connecting) dispatch({ type: 'invite', userKey: userKey })\n                  }}\n                >\n                  <Button disable={connecting} icon={faLinkedin}>\n                    {connecting ? 'Pending' : 'Connect'}\n                  </Button>\n                </div>\n              ),\n              meetingApproved && (\n                <a href=\"https://calendly.com/juuyan/60min\" target=\"_blank\">\n                  <Button icon={faCalendar}>\n                    Schedule meeting\n                  </Button>\n                </a>\n              ),\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Info = ({ value, content }) => (\n  <>\n    <span className=\"font-bold\">{value}</span>\n    {` ${content}`}\n  </>\n)\n","import React, { useContext } from 'react'\nimport bg from './assets/screenshort.png'\nimport { ChatBox, History, UserAvatar, appContext } from './components'\n\nfunction App() {\n  const { state } = useContext(appContext)\n\n  const users = state.users\n  const userAvatars = Object.keys(users).map((key, i) => <UserAvatar user={users[key]} key={i} />)\n  const chatBoxes = state.activeUsers.map((activeUser, i) => (\n    <div className=\"mx-1\" key={i}>\n      <ChatBox user={activeUser} />\n    </div>\n  ))\n\n  return (\n    <div className=\"relative h-screen w-screen overflow-scroll bg-black\">\n      <div className=\"relative\">\n        <img src={bg} style={{ minWidth: 1440 }} />\n        {userAvatars}\n        <div className=\"absolute right-0 bottom-0 mr-22\">\n          <div className=\"flex items-end -mx-1\" style={{ flexDirection: 'row-reverse' }}>\n            <History />\n            {chatBoxes}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { StateStore } from './components'\n\nReactDOM.render(\n  <StateStore>\n    <App />\n  </StateStore>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}